const fs = require('fs');

fs.readFile(`data.json`, 'utf8', onLoad);

function getPrecompAssets(id, assets) {
	var i, len = assets.length;
	for (i = 0; i < len; i += 1) {
		if (assets[i].id === id) {
			return assets[i];
		}
	}
}

function addPrecomp(id, assets) {
	var precomps = [];
	var precompData = getPrecompAssets(id, assets);
	precomps.push(precompData);
	var i, len = precompData.layers.length;
	for(i = 0; i < len; i += 1) {
		if(precompData.layers[i].ty === 0) {
			precomps = precomps.concat(addPrecomp(precompData.layers[i].refId, assets))
		}
	}
	return precomps;
}

function buildSegment(layer, assets, id) {
	layer.id = id;
	var segmentData = {
		layers: [layer]
	}
	var precomps = addPrecomp(layer.refId, assets);
	var precompsIncluded = {}

	segmentData.assets = precomps.filter((item) => {
		if(precompsIncluded[item.id]) {
			return false
		} else {
			precompsIncluded[item.id] = true;
			return true;
		}
	})
	return segmentData;


}

function traverseAnimation(animationData) {
	let layers = animationData.layers
	var segments = [];
	layers.forEach((layer, index) => {
		if(layer.ty === 0) {
			let id = Math.random().toString().split('.').join('')
			var segment = buildSegment(layer, animationData.assets, id);
			segments.push(segment);
			layers[index] = {
				id: id,
				ty: 99
			}
		}
	})
	layers = layers.map(layer => {
		if(layer.ty !== 0) {
			return layer
		} else {
			let newLayer = {

			}
			return newLayer
		}
	});
	animationData.layers = layers;
	animationData.assets = [];
	fs.writeFile(`main.json`, JSON.stringify(animationData), (err) => {
		if (err) {
			reject(err)
		} else {
			console.log('File Saved: main.json')
		}
	});
	segments.forEach((segment, index) => {
		fs.writeFile(`segment_${index}.json`, JSON.stringify(segment), (err) => {
			if (err) {
				reject(err)
			} else {
				console.log('File Saved: ' + `segment_${index}.json`)
			}
		});
	})
}

function onLoad(error, data) {
	traverseAnimation(JSON.parse(data))
}